{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-projects\\\\aspire\\\\frontend\\\\src\\\\screens\\\\ContactScreen.js\";\nimport React from 'react';\nimport { Formik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContactScreen = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        name: '',\n        email: '',\n        purpose: ''\n      },\n      validate: values => {\n        const errors = {};\n        if (!values.email) {\n          errors.email = 'Required';\n        } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)) {\n          errors.email = 'Invalid email address';\n        } else if (!values.name) {\n          errors.name = 'Required';\n        }\n        return errors;\n      },\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(() => {\n          alert(JSON.stringify(values, null, 2));\n          setSubmitting(false);\n        }, 400);\n      },\n      children: ({\n        values,\n        errors,\n        touched,\n        handleChange,\n        handleBlur,\n        handleSubmit,\n        isSubmitting\n        /* and other goodies */\n      }) => /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.email,\n          children: \"Email : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 15\n        }, this), errors.email && touched.email && errors.email, /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          onChange: handleChange,\n          onBlur: handleBlur,\n          value: values.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 15\n        }, this), errors.password && touched.password && errors.password, /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n_c = ContactScreen;\nexport default ContactScreen;\nvar _c;\n$RefreshReg$(_c, \"ContactScreen\");","map":{"version":3,"names":["React","Formik","jsxDEV","_jsxDEV","ContactScreen","children","initialValues","name","email","purpose","validate","values","errors","test","onSubmit","setSubmitting","setTimeout","alert","JSON","stringify","touched","handleChange","handleBlur","handleSubmit","isSubmitting","type","onChange","onBlur","value","fileName","_jsxFileName","lineNumber","columnNumber","password","disabled","_c","$RefreshReg$"],"sources":["C:/react-projects/aspire/frontend/src/screens/ContactScreen.js"],"sourcesContent":["import React from 'react'\r\nimport { Formik} from 'formik'\r\n\r\nconst ContactScreen = () => {\r\n  return (\r\n    <div>\r\n        <Formik initialValues={{name: '', email:'' , purpose: ''}}\r\n        validate={values => {\r\n            const errors = {};\r\n            if (!values.email) {\r\n              errors.email = 'Required';\r\n            } else if (\r\n              !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n            ) {\r\n              errors.email = 'Invalid email address';\r\n            }else if(!values.name){\r\n                errors.name = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(() => {\r\n              alert(JSON.stringify(values, null, 2));\r\n              setSubmitting(false);\r\n            }, 400);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n              >Email : </input>\r\n              {errors.email && touched.email && errors.email}\r\n              <input\r\n                type=\"password\"\r\n                name=\"password\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.password}\r\n              />\r\n              {errors.password && touched.password && errors.password}\r\n              <button type=\"submit\" disabled={isSubmitting}>\r\n                Submit\r\n              </button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ContactScreen"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAO,QAAQ;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE9B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAC1B,oBACED,OAAA;IAAAE,QAAA,eACIF,OAAA,CAACF,MAAM;MAACK,aAAa,EAAE;QAACC,IAAI,EAAE,EAAE;QAAEC,KAAK,EAAC,EAAE;QAAGC,OAAO,EAAE;MAAE,CAAE;MAC1DC,QAAQ,EAAEC,MAAM,IAAI;QAChB,MAAMC,MAAM,GAAG,CAAC,CAAC;QACjB,IAAI,CAACD,MAAM,CAACH,KAAK,EAAE;UACjBI,MAAM,CAACJ,KAAK,GAAG,UAAU;QAC3B,CAAC,MAAM,IACL,CAAC,0CAA0C,CAACK,IAAI,CAACF,MAAM,CAACH,KAAK,CAAC,EAC9D;UACAI,MAAM,CAACJ,KAAK,GAAG,uBAAuB;QACxC,CAAC,MAAK,IAAG,CAACG,MAAM,CAACJ,IAAI,EAAC;UAClBK,MAAM,CAACL,IAAI,GAAG,UAAU;QAC5B;QACA,OAAOK,MAAM;MACf,CAAE;MACFE,QAAQ,EAAEA,CAACH,MAAM,EAAE;QAAEI;MAAc,CAAC,KAAK;QACvCC,UAAU,CAAC,MAAM;UACfC,KAAK,CAACC,IAAI,CAACC,SAAS,CAACR,MAAM,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC;UACtCI,aAAa,CAAC,KAAK,CAAC;QACtB,CAAC,EAAE,GAAG,CAAC;MACT,CAAE;MAAAV,QAAA,EAEDA,CAAC;QACAM,MAAM;QACNC,MAAM;QACNQ,OAAO;QACPC,YAAY;QACZC,UAAU;QACVC,YAAY;QACZC;QACA;MACF,CAAC,kBACCrB,OAAA;QAAMW,QAAQ,EAAES,YAAa;QAAAlB,QAAA,gBAC3BF,OAAA;UACEsB,IAAI,EAAC,OAAO;UACZlB,IAAI,EAAC,OAAO;UACZmB,QAAQ,EAAEL,YAAa;UACvBM,MAAM,EAAEL,UAAW;UACnBM,KAAK,EAAEjB,MAAM,CAACH,KAAM;UAAAH,QAAA,EACrB;QAAQ;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAO,CAAC,EAChBpB,MAAM,CAACJ,KAAK,IAAIY,OAAO,CAACZ,KAAK,IAAII,MAAM,CAACJ,KAAK,eAC9CL,OAAA;UACEsB,IAAI,EAAC,UAAU;UACflB,IAAI,EAAC,UAAU;UACfmB,QAAQ,EAAEL,YAAa;UACvBM,MAAM,EAAEL,UAAW;UACnBM,KAAK,EAAEjB,MAAM,CAACsB;QAAS;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxB,CAAC,EACDpB,MAAM,CAACqB,QAAQ,IAAIb,OAAO,CAACa,QAAQ,IAAIrB,MAAM,CAACqB,QAAQ,eACvD9B,OAAA;UAAQsB,IAAI,EAAC,QAAQ;UAACS,QAAQ,EAAEV,YAAa;UAAAnB,QAAA,EAAC;QAE9C;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL;IACP;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACR,CAAC;AAEV,CAAC;AAAAG,EAAA,GA3DK/B,aAAa;AA6DnB,eAAeA,aAAa;AAAA,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}